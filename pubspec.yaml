name: reqres
description: REST App Demonstration w/ Functional Approach

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.12.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  # HTTP client
  dio: ^4.0.0

  # Hook widget
  flutter_hooks: ^0.18.0

  # Secure storage lib
  flutter_secure_storage: ^4.2.0

  # Enables functional programming for widgets
  functional_widget_annotation: ^0.9.0

  # A ViewModel that contains lifecycle functions, as well as routing & local storage
  get: ^4.3.4

  # Our Service locator object that allows us to get Objects that have been registered.
  get_it: ^7.1.3

  # Helper for get_it, it allows for our classes to have annotations like @injectable
  injectable: ^1.4.1

  # Parses JSON objects into Flutter Objects using annotations.
  json_annotation: ^4.0.1

  # No-SQL local database
  objectbox: ^1.0.0

  # Find commonly used locations on the filesystem
  path_provider: ^2.0.2

  # Even more verbose stack trace (hope this will add more meaningful trace for sentry)
  stack_trace: ^1.10.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # Process yaml
  build_config: ^1.0.0

  # Enables code generation
  build_runner: ^2.0.5

  # Generates partial classes from objectbox:
  objectbox_generator: ^1.0.0

  # Generates widget classes from functional_widget_annotation:
  functional_widget: ^0.9.0+2

  # Generates partial class to build dependencies from injectable:
  injectable_generator: ^1.4.1

  # Generates partial class from
  json_serializable: ^4.1.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
